---
layout: post
title:  "Подготовка проекта в rkappa! (Продолжение)"
date:   2015-03-09 16:58:41
categories: rkappa update
---
# Редактирование содержимого проекта в rkappa

Большое количество текстовых полей делает редактирование содержимого проекта довольно хлопотным: необходимо найти нужный элемент списка, строку в нем, изменить содержимое и присвоить его необходимому элементу. 

```r
vproject$shLines[['run.sh.templ']][13]<-"export KASIM_EXE=%execPath%"
```

Я могу предложить два способа упростить модификацию проекта: использование внешних файлов и использование функции `edit`.

## Использование внешних файлов

Идея этого подхода проста -- все текстовые элементы проекта должны храниться в виде внешних файлов. Модификация производится во внешних файлах и загружается в R с помощью функции  `readFiles` из пакета  `rkappa`:

```r
vproject$shLines<-readFiles(c("run.sh.templ", "jobConc.sh.templ", "job.sh.templ"))

```

, либо путем пересоздания проекта заново.

К достоинствам этого метода можно отнести то, что содержимое текстовый элементов можно хранить в системе контроля версий, например git. Это дает возможность контролировать процесс разработки проекта, быстро исправлять ошибки и использовать удачные находки в нескольких проектах одновременно.

Главным недостатком этого метода является возможность потери согласованности содержимого R-проекта и текстовых файлов.

## Использование функции `edit`

Функция `edit` изначально предназначена для редактирования содержимого функций. В среде RStudio при вызове этой функции открывается отдельное окно с содержимым функции, листа или списка, по окончании работы будет возвращен измененный список:

```r
vproject$shLines$run.sh.templ<-edit(vproject$shLines$run.sh.templ)

```

 При работе в коммандной строке откроется редактор по умолчанию. В коммандной строке можно также использовать функции `vi`, `pico`, `emacs`, `xemacs`, `xedit` для вызова конкретного редактора. Основным недостатком этого подхода является ужасное форматирование: элементы списка перечислены через запятую как вызов функции `c`, поэтому их очень неудобно читать.

Следите за обновлениями [документации][rkappa-doc], [рабочей][rkappa-dev] и [стабильной][rkappa] версий кода. 



[rkappa-doc]: http://lptolik.github.com/R4Kappa
[rkappa]:     https://github.com/lptolik/R4Kappa
[rkappa-dev]: https://github.com/lptolik/R4Kappa/tree/develop
